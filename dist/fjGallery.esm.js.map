{"version":3,"file":"fjGallery.esm.js","sources":["../node_modules/throttle-debounce/esm/index.js","../node_modules/raf-schd/dist/raf-schd.esm.js","../node_modules/better-justified-layout/dist/better-justified-layout.js","../src/utils/ready.js","../src/utils/global.js","../src/utils/get-img-dimensions.js","../src/fjGallery.js"],"sourcesContent":["/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nfunction throttle (delay, callback, options) {\n  var _ref = options || {},\n      _ref$noTrailing = _ref.noTrailing,\n      noTrailing = _ref$noTrailing === void 0 ? false : _ref$noTrailing,\n      _ref$noLeading = _ref.noLeading,\n      noLeading = _ref$noLeading === void 0 ? false : _ref$noLeading,\n      _ref$debounceMode = _ref.debounceMode,\n      debounceMode = _ref$debounceMode === void 0 ? undefined : _ref$debounceMode;\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n\n\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel(options) {\n    var _ref2 = options || {},\n        _ref2$upcomingOnly = _ref2.upcomingOnly,\n        upcomingOnly = _ref2$upcomingOnly === void 0 ? false : _ref2$upcomingOnly;\n\n    clearExistingTimeout();\n    cancelled = !upcomingOnly;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n      arguments_[_key] = arguments[_key];\n    }\n\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, arguments_);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (!noLeading && debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`\n       * and noLeading != true.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      if (noLeading) {\n        /*\n         * In throttle mode with noLeading, if `delay` time has\n         * been exceeded, update `lastExec` and schedule `callback`\n         * to execute after `delay` ms.\n         */\n        lastExec = Date.now();\n\n        if (!noTrailing) {\n          timeoutID = setTimeout(debounceMode ? clear : exec, delay);\n        }\n      } else {\n        /*\n         * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n         * `callback`.\n         */\n        exec();\n      }\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\n/* eslint-disable no-undefined */\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\n\nfunction debounce (delay, callback, options) {\n  var _ref = options || {},\n      _ref$atBegin = _ref.atBegin,\n      atBegin = _ref$atBegin === void 0 ? false : _ref$atBegin;\n\n  return throttle(delay, callback, {\n    debounceMode: atBegin !== false\n  });\n}\n\nexport { debounce, throttle };\n//# sourceMappingURL=index.js.map\n","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","'use strict';\n\n/**\n * Row\n * Wrapper for each row in a justified layout.\n * Stores relevant values and provides methods for calculating layout of individual rows.\n *\n * @param {Object} layoutConfig - The same as that passed\n * @param {Object} Initialization parameters. The following are all required:\n * @param params.index {Number} The index of this row\n * @param params.top {Number} Top of row, relative to container\n * @param params.left {Number} Left side of row relative to container (equal to container left padding)\n * @param params.width {Number} Width of row, not including container padding\n * @param params.spacing {Number} Horizontal spacing between items\n * @param params.targetRowHeight {Number} Layout algorithm will aim for this row height\n * @param params.targetRowHeightTolerance {Number} Row heights may vary +/- (`targetRowHeight` x `targetRowHeightTolerance`)\n * @param params.edgeCaseMinRowHeight {Number} Absolute minimum row height for edge cases that cannot be resolved within tolerance.\n * @param params.edgeCaseMaxRowHeight {Number} Absolute maximum row height for edge cases that cannot be resolved within tolerance.\n * @param params.isBreakoutRow {Boolean} Is this row in particular one of those breakout rows? Always false if it's not that kind of photo list\n * @param params.widowLayoutStyle {String} If widows are visible, how should they be laid out?\n * @constructor\n */\nconst Row = function (params) {\n  // The index of this row\n  this.index = params.index;\n\n  // Top of row, relative to container\n  this.top = params.top;\n\n  // Left side of row relative to container (equal to container left padding)\n  this.left = params.left;\n\n  // Width of row, not including container padding\n  this.width = params.width;\n\n  // Horizontal spacing between items\n  this.spacing = params.spacing;\n\n  // Row height calculation values\n  this.targetRowHeight = params.targetRowHeight;\n  this.targetRowHeightTolerance = params.targetRowHeightTolerance;\n  this.minAspectRatio = this.width / params.targetRowHeight * (1 - params.targetRowHeightTolerance);\n  this.maxAspectRatio = this.width / params.targetRowHeight * (1 + params.targetRowHeightTolerance);\n\n  // Edge case row height minimum/maximum\n  this.edgeCaseMinRowHeight = params.edgeCaseMinRowHeight;\n  this.edgeCaseMaxRowHeight = params.edgeCaseMaxRowHeight;\n\n  // Widow layout direction\n  this.widowLayoutStyle = params.widowLayoutStyle;\n\n  // Full width breakout rows\n  this.isBreakoutRow = params.isBreakoutRow;\n\n  // Store layout data for each item in row\n  this.items = [];\n\n  // Height remains at 0 until it's been calculated\n  this.height = 0;\n};\nRow.prototype = {\n  /**\n   * Attempt to add a single item to the row.\n   * This is the heart of the justified algorithm.\n   * This method is direction-agnostic; it deals only with sizes, not positions.\n   *\n   * If the item fits in the row, without pushing row height beyond min/max tolerance,\n   * the item is added and the method returns true.\n   *\n   * If the item leaves row height too high, there may be room to scale it down and add another item.\n   * In this case, the item is added and the method returns true, but the row is incomplete.\n   *\n   * If the item leaves row height too short, there are too many items to fit within tolerance.\n   * The method will either accept or reject the new item, favoring the resulting row height closest to within tolerance.\n   * If the item is rejected, left/right padding will be required to fit the row height within tolerance;\n   * if the item is accepted, top/bottom cropping will be required to fit the row height within tolerance.\n   *\n   * @method addItem\n   * @param itemData {Object} Item layout data, containing item aspect ratio.\n   * @return {Boolean} True if successfully added; false if rejected.\n   */\n  addItem: function (itemData) {\n    const newItems = this.items.concat(itemData);\n    // Calculate aspect ratios for items only; exclude spacing\n    const rowWidthWithoutSpacing = this.width - (newItems.length - 1) * this.spacing;\n    const newAspectRatio = newItems.reduce(function (sum, item) {\n      return sum + item.aspectRatio;\n    }, 0);\n    const targetAspectRatio = rowWidthWithoutSpacing / this.targetRowHeight;\n    let previousRowWidthWithoutSpacing;\n    let previousAspectRatio;\n    let previousTargetAspectRatio;\n\n    // Handle big full-width breakout photos if we're doing them\n    if (this.isBreakoutRow) {\n      // Only do it if there's no other items in this row\n      if (this.items.length === 0) {\n        // Only go full width if this photo is a square or landscape\n        if (itemData.aspectRatio >= 1) {\n          // Close out the row with a full width photo\n          this.items.push(itemData);\n          this.completeLayout(rowWidthWithoutSpacing / itemData.aspectRatio, \"justify\");\n          return true;\n        }\n      }\n    }\n    if (newAspectRatio < this.minAspectRatio) {\n      // New aspect ratio is too narrow / scaled row height is too tall.\n      // Accept this item and leave row open for more items.\n\n      this.items.push(Object.assign({}, itemData));\n      return true;\n    } else if (newAspectRatio > this.maxAspectRatio) {\n      // New aspect ratio is too wide / scaled row height will be too short.\n      // Accept item if the resulting aspect ratio is closer to target than it would be without the item.\n      // NOTE: Any row that falls into this block will require cropping/padding on individual items.\n\n      if (this.items.length === 0) {\n        // When there are no existing items, force acceptance of the new item and complete the layout.\n        // This is the pano special case.\n        this.items.push(Object.assign({}, itemData));\n        this.completeLayout(rowWidthWithoutSpacing / newAspectRatio, \"justify\");\n        return true;\n      }\n\n      // Calculate width/aspect ratio for row before adding new item\n      previousRowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing;\n      previousAspectRatio = this.items.reduce(function (sum, item) {\n        return sum + item.aspectRatio;\n      }, 0);\n      previousTargetAspectRatio = previousRowWidthWithoutSpacing / this.targetRowHeight;\n      if (Math.abs(newAspectRatio - targetAspectRatio) > Math.abs(previousAspectRatio - previousTargetAspectRatio)) {\n        // Row with new item is us farther away from target than row without; complete layout and reject item.\n        this.completeLayout(previousRowWidthWithoutSpacing / previousAspectRatio, \"justify\");\n        return false;\n      } else {\n        // Row with new item is us closer to target than row without;\n        // accept the new item and complete the row layout.\n        this.items.push(Object.assign({}, itemData));\n        this.completeLayout(rowWidthWithoutSpacing / newAspectRatio, \"justify\");\n        return true;\n      }\n    } else {\n      // New aspect ratio / scaled row height is within tolerance;\n      // accept the new item and complete the row layout.\n      this.items.push(Object.assign({}, itemData));\n      this.completeLayout(rowWidthWithoutSpacing / newAspectRatio, \"justify\");\n      return true;\n    }\n  },\n  /**\n   * Check if a row has completed its layout.\n   *\n   * @method isLayoutComplete\n   * @return {Boolean} True if complete; false if not.\n   */\n  isLayoutComplete: function () {\n    return this.height > 0;\n  },\n  /**\n   * Set row height and compute item geometry from that height.\n   * Will justify items within the row unless instructed not to.\n   *\n   * @method completeLayout\n   * @param newHeight {Number} Set row height to this value.\n   * @param widowLayoutStyle {String} How should widows display? Supported: left | justify | center\n   */\n  completeLayout: function (newHeight, widowLayoutStyle) {\n    let itemWidthSum = this.left;\n    const rowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing;\n    let clampedToNativeRatio;\n    let clampedHeight;\n    let errorWidthPerItem;\n    let roundedCumulativeErrors;\n    let singleItemGeometry;\n    let centerOffset;\n\n    // Justify unless explicitly specified otherwise.\n    if (typeof widowLayoutStyle === \"undefined\" || [\"justify\", \"center\", \"left\"].indexOf(widowLayoutStyle) < 0) {\n      widowLayoutStyle = \"left\";\n    }\n\n    // Clamp row height to edge case minimum/maximum.\n    clampedHeight = Math.max(this.edgeCaseMinRowHeight, Math.min(newHeight, this.edgeCaseMaxRowHeight));\n    if (newHeight !== clampedHeight) {\n      // If row height was clamped, the resulting row/item aspect ratio will be off,\n      // so force it to fit the width (recalculate aspectRatio to match clamped height).\n      // NOTE: this will result in cropping/padding commensurate to the amount of clamping.\n      this.height = clampedHeight;\n      clampedToNativeRatio = rowWidthWithoutSpacing / clampedHeight / (rowWidthWithoutSpacing / newHeight);\n    } else {\n      // If not clamped, leave ratio at 1.0.\n      this.height = newHeight;\n      clampedToNativeRatio = 1.0;\n    }\n\n    // Compute item geometry based on newHeight.\n    this.items.forEach(function (item) {\n      item.row = this.index;\n      item.top = this.top;\n      item.width = item.aspectRatio * this.height * clampedToNativeRatio;\n      item.height = this.height;\n\n      // Left-to-right.\n      // TODO right to left\n      // item.left = this.width - itemWidthSum - item.width;\n      item.left = itemWidthSum;\n\n      // Increment width.\n      itemWidthSum += item.width + this.spacing;\n    }, this);\n\n    // If specified, ensure items fill row and distribute error\n    // caused by rounding width and height across all items.\n    if (widowLayoutStyle === \"justify\") {\n      itemWidthSum -= this.spacing + this.left;\n      errorWidthPerItem = (itemWidthSum - this.width) / this.items.length;\n      roundedCumulativeErrors = this.items.map(function (item, i) {\n        return Math.round((i + 1) * errorWidthPerItem);\n      });\n      if (this.items.length === 1) {\n        // For rows with only one item, adjust item width to fill row.\n        singleItemGeometry = this.items[0];\n        singleItemGeometry.width -= Math.round(errorWidthPerItem);\n      } else {\n        // For rows with multiple items, adjust item width and shift items to fill the row,\n        // while maintaining equal spacing between items in the row.\n        this.items.forEach(function (item, i) {\n          if (i > 0) {\n            item.left -= roundedCumulativeErrors[i - 1];\n            item.width -= roundedCumulativeErrors[i] - roundedCumulativeErrors[i - 1];\n          } else {\n            item.width -= roundedCumulativeErrors[i];\n          }\n        });\n      }\n    } else if (widowLayoutStyle === \"center\") {\n      // Center widows\n      centerOffset = (this.width - itemWidthSum) / 2;\n      this.items.forEach(function (item) {\n        item.left += centerOffset + this.spacing;\n      }, this);\n    }\n  },\n  /**\n   * Force completion of row layout with current items.\n   *\n   * @method forceComplete\n   * @param fitToWidth {Boolean} Stretch current items to fill the row width.\n   *                             This will likely result in padding.\n   * @param fitToWidth {Number}\n   */\n  forceComplete: function (fitToWidth, rowHeight) {\n    // TODO Handle fitting to width\n    // var rowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing,\n    // \tcurrentAspectRatio = this.items.reduce(function (sum, item) {\n    // \t\treturn sum + item.aspectRatio;\n    // \t}, 0);\n\n    if (typeof rowHeight === \"number\") {\n      this.completeLayout(rowHeight, this.widowLayoutStyle);\n    } else {\n      // Complete using target row height.\n      this.completeLayout(this.targetRowHeight, this.widowLayoutStyle);\n    }\n  },\n  /**\n   * Return layout data for items within row.\n   * Note: returns actual list, not a copy.\n   *\n   * @method getItems\n   * @return Layout data for items within row.\n   */\n  getItems: function () {\n    return this.items;\n  }\n};\n\n/*!\n * Copyright 2019 SmugMug, Inc. | Copyright 2024 nK\n * Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.\n * @license\n */\n\n/**\n * Create a new, empty row.\n *\n * @method createNewRow\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @return A new, empty row of the type specified by this layout.\n */\nfunction createNewRow(layoutConfig, layoutData) {\n  let isBreakoutRow;\n\n  // Work out if this is a full width breakout row\n  if (layoutConfig.fullWidthBreakoutRowCadence !== false) {\n    if ((layoutData._rows.length + 1) % layoutConfig.fullWidthBreakoutRowCadence === 0) {\n      isBreakoutRow = true;\n    }\n  }\n  return new Row({\n    index: layoutData._rows.length,\n    top: layoutData._containerHeight,\n    left: layoutConfig.containerPadding.left,\n    width: layoutConfig.containerWidth - layoutConfig.containerPadding.left - layoutConfig.containerPadding.right,\n    spacing: layoutConfig.boxSpacing.horizontal,\n    targetRowHeight: layoutConfig.targetRowHeight,\n    targetRowHeightTolerance: layoutConfig.targetRowHeightTolerance,\n    edgeCaseMinRowHeight: layoutConfig.edgeCaseMinRowHeight * layoutConfig.targetRowHeight,\n    edgeCaseMaxRowHeight: layoutConfig.edgeCaseMaxRowHeight * layoutConfig.targetRowHeight,\n    rightToLeft: false,\n    isBreakoutRow: isBreakoutRow,\n    widowLayoutStyle: layoutConfig.widowLayoutStyle\n  });\n}\n\n/**\n * Add a completed row to the layout.\n * Note: the row must have already been completed.\n *\n * @method addRow\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @param row {Row} The row to add.\n * @return {Array} Each item added to the row.\n */\nfunction addRow(layoutConfig, layoutData, row) {\n  layoutData._rows.push(row);\n  layoutData._layoutItems = layoutData._layoutItems.concat(row.getItems());\n\n  // Increment the container height\n  layoutData._containerHeight += row.height + layoutConfig.boxSpacing.vertical;\n  return row.items;\n}\n\n/**\n * Calculate the current layout for all items in the list that require layout.\n * \"Layout\" means geometry: position within container and size\n *\n * @method computeLayout\n * @param layoutConfig {Object} The layout configuration\n * @param layoutData {Object} The current state of the layout\n * @param itemLayoutData {Array} Array of items to lay out, with data required to lay out each item\n * @return {Object} The newly-calculated layout, containing the new container height, and lists of layout items\n */\nfunction computeLayout(layoutConfig, layoutData, itemLayoutData) {\n  let laidOutItems = [];\n  let itemAdded;\n  let currentRow;\n  let nextToLastRowHeight;\n\n  // Apply forced aspect ratio if specified, and set a flag.\n  if (layoutConfig.forceAspectRatio) {\n    itemLayoutData.forEach(function (itemData) {\n      itemData.forcedAspectRatio = true;\n      itemData.aspectRatio = layoutConfig.forceAspectRatio;\n    });\n  }\n\n  // Loop through the items\n  itemLayoutData.some(function (itemData, i) {\n    if (isNaN(itemData.aspectRatio)) {\n      throw new Error(\"Item \" + i + \" has an invalid aspect ratio\");\n    }\n\n    // If not currently building up a row, make a new one.\n    if (!currentRow) {\n      currentRow = createNewRow(layoutConfig, layoutData);\n    }\n\n    // Attempt to add item to the current row.\n    itemAdded = currentRow.addItem(itemData);\n    if (currentRow.isLayoutComplete()) {\n      // Row is filled; add it and start a new one\n      laidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n      if (layoutData._rows.length >= layoutConfig.maxNumRows) {\n        currentRow = null;\n        return true;\n      }\n      currentRow = createNewRow(layoutConfig, layoutData);\n\n      // Item was rejected; add it to its own row\n      if (!itemAdded) {\n        itemAdded = currentRow.addItem(itemData);\n        if (currentRow.isLayoutComplete()) {\n          // If the rejected item fills a row on its own, add the row and start another new one\n          laidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n          if (layoutData._rows.length >= layoutConfig.maxNumRows) {\n            currentRow = null;\n            return true;\n          }\n          currentRow = createNewRow(layoutConfig, layoutData);\n        }\n      }\n    }\n  });\n\n  // Handle any leftover content (orphans) depending on where they lie\n  // in this layout update, and in the total content set.\n  if (currentRow && currentRow.getItems().length && layoutConfig.showWidows) {\n    // Last page of all content or orphan suppression is suppressed; lay out orphans.\n    if (layoutData._rows.length) {\n      // Only Match previous row's height if it exists and it isn't a breakout row\n      if (layoutData._rows[layoutData._rows.length - 1].isBreakoutRow) {\n        nextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].targetRowHeight;\n      } else {\n        nextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].height;\n      }\n      currentRow.forceComplete(false, nextToLastRowHeight);\n    } else {\n      // ...else use target height if there is no other row height to reference.\n      currentRow.forceComplete(false);\n    }\n    laidOutItems = laidOutItems.concat(addRow(layoutConfig, layoutData, currentRow));\n    layoutConfig._widowCount = currentRow.getItems().length;\n  }\n\n  // We need to clean up the bottom container padding\n  // First remove the height added for box spacing\n  layoutData._containerHeight = layoutData._containerHeight - layoutConfig.boxSpacing.vertical;\n  // Then add our bottom container padding\n  layoutData._containerHeight = layoutData._containerHeight + layoutConfig.containerPadding.bottom;\n  return {\n    containerHeight: layoutData._containerHeight,\n    widowCount: layoutConfig._widowCount,\n    boxes: layoutData._layoutItems\n  };\n}\n\n/**\n * Takes in a bunch of box data and config. Returns\n * geometry to lay them out in a justified view.\n *\n * @method covertSizesToAspectRatios\n * @param sizes {Array} Array of objects with widths and heights\n * @return {Array} A list of aspect ratios\n */\nfunction index (input, config) {\n  let layoutConfig = {};\n  const layoutData = {};\n\n  // Defaults\n  const defaults = {\n    containerWidth: 1060,\n    containerPadding: 10,\n    boxSpacing: 10,\n    targetRowHeight: 320,\n    targetRowHeightTolerance: 0.25,\n    edgeCaseMinRowHeight: 0.5,\n    edgeCaseMaxRowHeight: 2.5,\n    maxNumRows: Number.POSITIVE_INFINITY,\n    forceAspectRatio: false,\n    showWidows: true,\n    fullWidthBreakoutRowCadence: false,\n    widowLayoutStyle: \"left\"\n  };\n  const containerPadding = {};\n  const boxSpacing = {};\n  config = config || {};\n\n  // Merge defaults and config passed in\n  layoutConfig = Object.assign(defaults, config);\n\n  // Sort out padding and spacing values\n  containerPadding.top = !isNaN(parseFloat(layoutConfig.containerPadding.top)) ? layoutConfig.containerPadding.top : layoutConfig.containerPadding;\n  containerPadding.right = !isNaN(parseFloat(layoutConfig.containerPadding.right)) ? layoutConfig.containerPadding.right : layoutConfig.containerPadding;\n  containerPadding.bottom = !isNaN(parseFloat(layoutConfig.containerPadding.bottom)) ? layoutConfig.containerPadding.bottom : layoutConfig.containerPadding;\n  containerPadding.left = !isNaN(parseFloat(layoutConfig.containerPadding.left)) ? layoutConfig.containerPadding.left : layoutConfig.containerPadding;\n  boxSpacing.horizontal = !isNaN(parseFloat(layoutConfig.boxSpacing.horizontal)) ? layoutConfig.boxSpacing.horizontal : layoutConfig.boxSpacing;\n  boxSpacing.vertical = !isNaN(parseFloat(layoutConfig.boxSpacing.vertical)) ? layoutConfig.boxSpacing.vertical : layoutConfig.boxSpacing;\n  layoutConfig.containerPadding = containerPadding;\n  layoutConfig.boxSpacing = boxSpacing;\n\n  // Local\n  layoutData._layoutItems = [];\n  layoutData._awakeItems = [];\n  layoutData._inViewportItems = [];\n  layoutData._leadingOrphans = [];\n  layoutData._trailingOrphans = [];\n  layoutData._containerHeight = layoutConfig.containerPadding.top;\n  layoutData._rows = [];\n  layoutData._orphans = [];\n  layoutConfig._widowCount = 0;\n\n  // Convert widths and heights to aspect ratios if we need to\n  return computeLayout(layoutConfig, layoutData, input.map(function (item) {\n    if (item.width && item.height) {\n      return {\n        aspectRatio: item.width / item.height\n      };\n    } else {\n      return {\n        aspectRatio: item\n      };\n    }\n  }));\n}\n\nmodule.exports = index;\n//# sourceMappingURL=better-justified-layout.js.map\n","function ready(callback) {\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    // Already ready or interactive, execute callback\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback, {\n      capture: true,\n      once: true,\n      passive: true,\n    });\n  }\n}\n\nexport default ready;\n","/* eslint-disable import/no-mutable-exports */\n/* eslint-disable no-restricted-globals */\nlet win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof global !== 'undefined') {\n  win = global;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n}\n\nexport default win;\n","// get image dimensions\n// thanks https://gist.github.com/dimsemenov/5382856\nfunction getImgDimensions(img, cb) {\n  let interval;\n  let hasSize = false;\n  let addedListeners = false;\n\n  const onHasSize = () => {\n    if (hasSize) {\n      cb(hasSize);\n      return;\n    }\n\n    // check for non-zero, non-undefined naturalWidth\n    if (!img.naturalWidth) {\n      return;\n    }\n\n    hasSize = {\n      width: img.naturalWidth,\n      height: img.naturalHeight,\n    };\n    cb(hasSize);\n\n    clearInterval(interval);\n    if (addedListeners) {\n      // eslint-disable-next-line no-use-before-define\n      removeListeners();\n    }\n  };\n  const onLoaded = () => {\n    onHasSize();\n  };\n  const onError = () => {\n    onHasSize();\n  };\n  const checkSize = () => {\n    if (img.naturalWidth > 0) {\n      onHasSize();\n    }\n  };\n  const addListeners = () => {\n    addedListeners = true;\n    img.addEventListener('load', onLoaded);\n    img.addEventListener('error', onError);\n  };\n  const removeListeners = () => {\n    addedListeners = false;\n    img.removeEventListener('load', onLoaded);\n    img.removeEventListener('error', onError);\n  };\n\n  checkSize();\n\n  if (!hasSize) {\n    addListeners();\n    interval = setInterval(checkSize, 100);\n  }\n}\n\nexport default getImgDimensions;\n","import { debounce } from 'throttle-debounce';\nimport rafSchd from 'raf-schd';\nimport justifiedLayout from 'better-justified-layout';\n\nimport domReady from './utils/ready';\nimport global from './utils/global';\nimport getImgDimensions from './utils/get-img-dimensions';\n\n// list with all fjGallery instances\n// need to render all in one scroll/resize event\nconst fjGalleryList = [];\n\nconst updateFjGallery = rafSchd(() => {\n  fjGalleryList.forEach((item) => {\n    item.resize();\n  });\n});\n\nglobal.addEventListener('resize', updateFjGallery);\nglobal.addEventListener('orientationchange', updateFjGallery);\nglobal.addEventListener('load', updateFjGallery);\ndomReady(() => {\n  updateFjGallery();\n});\n\nlet instanceID = 0;\n\n// fjGallery class\nclass FJGallery {\n  constructor(container, userOptions) {\n    const self = this;\n\n    self.instanceID = instanceID;\n    instanceID += 1;\n\n    self.$container = container;\n\n    self.images = [];\n\n    self.defaults = {\n      itemSelector: '.fj-gallery-item',\n      imageSelector: 'img',\n      gutter: 10, // supports object like `{ horizontal: 10, vertical: 10 }`.\n      rowHeight: 320,\n      rowHeightTolerance: 0.25, // [0, 1]\n      maxRowsCount: Number.POSITIVE_INFINITY,\n      edgeCaseMinRowHeight: 0.5,\n      edgeCaseMaxRowHeight: 2.5,\n      lastRow: 'left', // left, center, right, hide\n      transitionDuration: '0.3s',\n      calculateItemsHeight: false,\n      resizeDebounce: 100,\n      isRtl: self.css(self.$container, 'direction') === 'rtl',\n\n      // events\n      onInit: null, // function() {}\n      onDestroy: null, // function() {}\n      onAppendImages: null, // function() {}\n      onBeforeJustify: null, // function() {}\n      onJustify: null, // function() {}\n    };\n\n    // prepare data-options\n    const dataOptions = self.$container.dataset || {};\n    const pureDataOptions = {};\n    Object.keys(dataOptions).forEach((key) => {\n      const loweCaseOption = key.substr(0, 1).toLowerCase() + key.substr(1);\n      if (loweCaseOption && typeof self.defaults[loweCaseOption] !== 'undefined') {\n        pureDataOptions[loweCaseOption] = dataOptions[key];\n      }\n    });\n\n    self.options = {\n      ...self.defaults,\n      ...pureDataOptions,\n      ...userOptions,\n    };\n\n    self.pureOptions = {\n      ...self.options,\n    };\n\n    // debounce for resize\n    self.resize = debounce(self.options.resizeDebounce, self.resize);\n    self.justify = rafSchd(self.justify.bind(self));\n\n    self.init();\n  }\n\n  // add styles to element\n  // eslint-disable-next-line class-methods-use-this\n  css(el, styles) {\n    if (typeof styles === 'string') {\n      return global.getComputedStyle(el).getPropertyValue(styles);\n    }\n\n    Object.keys(styles).forEach((key) => {\n      el.style[key] = styles[key];\n    });\n    return el;\n  }\n\n  // set temporary transition with event listener\n  applyTransition($item, properties) {\n    const self = this;\n\n    // Remove previous event listener\n    self.onTransitionEnd($item)();\n\n    // Add transitions\n    self.css($item, {\n      'transition-property': properties.join(', '),\n      'transition-duration': self.options.transitionDuration,\n    });\n\n    // Add event listener\n    $item.addEventListener('transitionend', self.onTransitionEnd($item, properties), false);\n  }\n\n  onTransitionEnd($item) {\n    const self = this;\n\n    return () => {\n      self.css($item, {\n        'transition-property': '',\n        'transition-duration': '',\n      });\n\n      $item.removeEventListener('transitionend', self.onTransitionEnd($item));\n    };\n  }\n\n  // add to fjGallery instances list\n  addToFjGalleryList() {\n    fjGalleryList.push(this);\n    updateFjGallery();\n  }\n\n  // remove from fjGallery instances list\n  removeFromFjGalleryList() {\n    const self = this;\n\n    fjGalleryList.forEach((item, key) => {\n      if (item.instanceID === self.instanceID) {\n        fjGalleryList.splice(key, 1);\n      }\n    });\n  }\n\n  init() {\n    const self = this;\n\n    self.appendImages(self.$container.querySelectorAll(self.options.itemSelector));\n\n    self.addToFjGalleryList();\n\n    // call onInit event\n    if (self.options.onInit) {\n      self.options.onInit.call(self);\n    }\n  }\n\n  // append images\n  appendImages($images) {\n    const self = this;\n\n    // check if jQuery\n    if (global.jQuery && $images instanceof global.jQuery) {\n      $images = $images.get();\n    }\n\n    if (!$images || !$images.length) {\n      return;\n    }\n\n    $images.forEach(($item) => {\n      // if $images is jQuery, for some reason in this array there is undefined item, that not a DOM,\n      // so we need to check for $item.querySelector.\n      if ($item && !$item.fjGalleryImage && $item.querySelector) {\n        const $image = $item.querySelector(self.options.imageSelector);\n\n        if ($image) {\n          $item.fjGalleryImage = self;\n          const data = {\n            $item,\n            $image,\n            width: parseFloat($image.getAttribute('width')) || false,\n            height: parseFloat($image.getAttribute('height')) || false,\n            loadSizes() {\n              const itemData = this;\n              getImgDimensions($image, (dimensions) => {\n                if (itemData.width !== dimensions.width || itemData.height !== dimensions.height) {\n                  itemData.width = dimensions.width;\n                  itemData.height = dimensions.height;\n                  self.resize();\n                }\n              });\n            },\n          };\n          data.loadSizes();\n\n          self.images.push(data);\n        }\n      }\n    });\n\n    // call onAppendImages event\n    if (self.options.onAppendImages) {\n      self.options.onAppendImages.call(self, [$images]);\n    }\n\n    self.justify();\n  }\n\n  // justify images\n  justify() {\n    const self = this;\n    const justifyArray = [];\n\n    self.justifyCount = (self.justifyCount || 0) + 1;\n\n    // call onBeforeJustify event\n    if (self.options.onBeforeJustify) {\n      self.options.onBeforeJustify.call(self);\n    }\n\n    self.images.forEach((data) => {\n      if (data.width && data.height) {\n        justifyArray.push(data.width / data.height);\n      }\n    });\n\n    const justifiedOptions = {\n      containerWidth: self.$container.getBoundingClientRect().width,\n      containerPadding: {\n        top: parseFloat(self.css(self.$container, 'padding-top')) || 0,\n        right: parseFloat(self.css(self.$container, 'padding-right')) || 0,\n        bottom: parseFloat(self.css(self.$container, 'padding-bottom')) || 0,\n        left: parseFloat(self.css(self.$container, 'padding-left')) || 0,\n      },\n      boxSpacing: self.options.gutter,\n      targetRowHeight: self.options.rowHeight,\n      targetRowHeightTolerance: self.options.rowHeightTolerance,\n      maxNumRows: self.options.maxRowsCount,\n      edgeCaseMinRowHeight: self.options.edgeCaseMinRowHeight,\n      edgeCaseMaxRowHeight: self.options.edgeCaseMaxRowHeight,\n      showWidows: self.options.lastRow !== 'hide',\n    };\n    const justifiedData = justifiedLayout(justifyArray, justifiedOptions);\n\n    // Align last row\n    if (\n      justifiedData.widowCount &&\n      (self.options.lastRow === 'center' || self.options.lastRow === 'right')\n    ) {\n      const lastItemData = justifiedData.boxes[justifiedData.boxes.length - 1];\n      let gapSize = justifiedOptions.containerWidth - lastItemData.width - lastItemData.left;\n\n      if (self.options.lastRow === 'center') {\n        gapSize /= 2;\n      }\n      if (self.options.lastRow === 'right') {\n        gapSize -= justifiedOptions.containerPadding.right;\n      }\n\n      for (let i = 1; i <= justifiedData.widowCount; i += 1) {\n        justifiedData.boxes[justifiedData.boxes.length - i].left =\n          justifiedData.boxes[justifiedData.boxes.length - i].left + gapSize;\n      }\n    }\n\n    // RTL compatibility\n    if (self.options.isRtl) {\n      justifiedData.boxes.forEach((boxData, i) => {\n        justifiedData.boxes[i].left =\n          justifiedOptions.containerWidth -\n          justifiedData.boxes[i].left -\n          justifiedData.boxes[i].width -\n          justifiedOptions.containerPadding.right +\n          justifiedOptions.containerPadding.left;\n      });\n    }\n\n    let i = 0;\n    let additionalTopOffset = 0;\n    const rowsMaxHeight = {};\n\n    // Set image sizes.\n    self.images.forEach((data, imgI) => {\n      if (justifiedData.boxes[i] && data.width && data.height) {\n        // calculate additional offset based on actual items height.\n        if (\n          self.options.calculateItemsHeight &&\n          typeof rowsMaxHeight[justifiedData.boxes[i].row] === 'undefined' &&\n          Object.keys(rowsMaxHeight).length\n        ) {\n          additionalTopOffset +=\n            rowsMaxHeight[Object.keys(rowsMaxHeight).pop()] - justifiedData.boxes[imgI - 1].height;\n        }\n\n        if (self.options.transitionDuration && self.justifyCount > 1) {\n          self.applyTransition(data.$item, ['transform']);\n        }\n\n        self.css(data.$item, {\n          display: '',\n          position: 'absolute',\n          transform: `translateX(${justifiedData.boxes[i].left}px) translateY(${\n            justifiedData.boxes[i].top + additionalTopOffset\n          }px) translateZ(0)`,\n          width: `${justifiedData.boxes[i].width}px`,\n        });\n\n        // calculate actual items height.\n        if (self.options.calculateItemsHeight) {\n          const rect = data.$item.getBoundingClientRect();\n\n          if (\n            typeof rowsMaxHeight[justifiedData.boxes[i].row] === 'undefined' ||\n            rowsMaxHeight[justifiedData.boxes[i].row] < rect.height\n          ) {\n            rowsMaxHeight[justifiedData.boxes[i].row] = rect.height;\n          }\n        }\n\n        i += 1;\n      } else {\n        self.css(data.$item, {\n          display: 'none',\n        });\n      }\n    });\n\n    // increase additional offset based on the latest row items height.\n    if (self.options.calculateItemsHeight && Object.keys(rowsMaxHeight).length) {\n      additionalTopOffset +=\n        rowsMaxHeight[Object.keys(rowsMaxHeight).pop()] -\n        justifiedData.boxes[justifiedData.boxes.length - 1].height;\n    }\n\n    if (self.options.transitionDuration) {\n      self.applyTransition(self.$container, ['height']);\n    }\n\n    // Set container height.\n    self.css(self.$container, {\n      height: `${justifiedData.containerHeight + additionalTopOffset}px`,\n    });\n\n    // call onJustify event\n    if (self.options.onJustify) {\n      self.options.onJustify.call(self);\n    }\n  }\n\n  // update options and resize gallery items\n  updateOptions(options) {\n    const self = this;\n    self.options = {\n      ...self.options,\n      ...options,\n    };\n    self.justify();\n  }\n\n  destroy() {\n    const self = this;\n\n    self.removeFromFjGalleryList();\n\n    self.justifyCount = 0;\n\n    // call onDestroy event\n    if (self.options.onDestroy) {\n      self.options.onDestroy.call(self);\n    }\n\n    // remove styles.\n    self.css(self.$container, {\n      height: '',\n      transition: '',\n    });\n    self.images.forEach((data) => {\n      self.css(data.$item, {\n        position: '',\n        transform: '',\n        transition: '',\n        width: '',\n        height: '',\n      });\n    });\n\n    // delete fjGalleryImage instance from images\n    self.images.forEach((val) => {\n      delete val.$item.fjGalleryImage;\n    });\n\n    // delete fjGallery instance from container\n    delete self.$container.fjGallery;\n  }\n\n  resize() {\n    const self = this;\n\n    self.justify();\n  }\n}\n\n// global definition\nconst fjGallery = function (items, options, ...args) {\n  // check for dom element\n  // thanks: http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n  if (\n    typeof HTMLElement === 'object'\n      ? items instanceof HTMLElement\n      : items &&\n        typeof items === 'object' &&\n        items !== null &&\n        items.nodeType === 1 &&\n        typeof items.nodeName === 'string'\n  ) {\n    items = [items];\n  }\n\n  const len = items.length;\n  let k = 0;\n  let ret;\n\n  for (k; k < len; k += 1) {\n    if (typeof options === 'object' || typeof options === 'undefined') {\n      if (!items[k].fjGallery) {\n        // eslint-disable-next-line new-cap\n        items[k].fjGallery = new FJGallery(items[k], options);\n      }\n    } else if (items[k].fjGallery) {\n      // eslint-disable-next-line prefer-spread\n      ret = items[k].fjGallery[options].apply(items[k].fjGallery, args);\n    }\n    if (typeof ret !== 'undefined') {\n      return ret;\n    }\n  }\n\n  return items;\n};\nfjGallery.constructor = FJGallery;\n\nexport default fjGallery;\n"],"names":["throttle","delay","callback","options","_ref","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","cancel","_ref2","_ref2$upcomingOnly","upcomingOnly","wrapper","_len","arguments","length","arguments_","Array","_key","self","elapsed","Date","now","exec","apply","clear","setTimeout","rafSchd","fn","lastArgs","frameId","wrapperFn","args","requestAnimationFrame","cancelAnimationFrame","Row","params","index","top","left","width","spacing","targetRowHeight","targetRowHeightTolerance","maxAspectRatio","edgeCaseMaxRowHeight","widowLayoutStyle","isBreakoutRow","items","height","prototype","addItem","itemData","newItems","concat","rowWidthWithoutSpacing","targetAspectRatio","previousRowWidthWithoutSpacing","previousTargetAspectRatio","aspectRatio","push","completeLayout","newAspectRatio","minAspectRatio","Object","assign","reduce","sum","item","Math","abs","previousAspectRatio","newHeight","itemWidthSum","clampedToNativeRatio","clampedHeight","errorWidthPerItem","roundedCumulativeErrors","centerOffset","indexOf","max","edgeCaseMinRowHeight","min","forEach","row","map","i","round","singleItemGeometry","forceComplete","fitToWidth","rowHeight","getItems","ready","document","readyState","addEventListener","capture","once","passive","win","window","global","getImgDimensions","img","cb","interval","hasSize","addedListeners","onHasSize","naturalWidth","naturalHeight","clearInterval","removeListeners","onLoaded","onError","checkSize","addListeners","removeEventListener","setInterval","fjGalleryList","updateFjGallery","resize","domReady","instanceID","FJGallery","constructor","container","userOptions","$container","images","defaults","itemSelector","imageSelector","gutter","rowHeightTolerance","maxRowsCount","Number","POSITIVE_INFINITY","lastRow","transitionDuration","calculateItemsHeight","resizeDebounce","isRtl","css","onInit","onDestroy","onAppendImages","onBeforeJustify","onJustify","dataOptions","dataset","pureDataOptions","keys","key","loweCaseOption","substr","toLowerCase","pureOptions","debounce","justify","bind","init","el","styles","getComputedStyle","getPropertyValue","style","applyTransition","$item","properties","onTransitionEnd","join","addToFjGalleryList","removeFromFjGalleryList","splice","appendImages","querySelectorAll","call","$images","jQuery","get","fjGalleryImage","querySelector","$image","data","parseFloat","getAttribute","loadSizes","dimensions","justifyArray","justifyCount","justifiedOptions","containerWidth","getBoundingClientRect","containerPadding","right","bottom","boxSpacing","maxNumRows","showWidows","justifiedData","justifiedLayout","widowCount","lastItemData","boxes","gapSize","boxData","additionalTopOffset","rowsMaxHeight","imgI","pop","display","position","transform","rect","containerHeight","updateOptions","destroy","transition","val","fjGallery","HTMLElement","nodeType","nodeName","len","k","ret"],"mappings":"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","x_google_ignoreList":[0,1,2]}